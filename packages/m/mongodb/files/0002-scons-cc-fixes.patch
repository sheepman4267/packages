diff --git a/SConstruct b/SConstruct
index 89c044ab..a6d02072 100644
--- a/SConstruct
+++ b/SConstruct0
@@ -3026,7 +3026,6 @@
     env.Append(
         CCFLAGS=[
             "-fasynchronous-unwind-tables",
-            "-g2" if not env.TargetOSIs('emscripten') else "-g",
             "-Wall",
             "-Wsign-compare",
             "-Wno-unknown-pragmas",
@@ -3099,6 +3098,8 @@
     # warnings as errors. See http://stackoverflow.com/a/19382663.
     if not (env.TargetOSIs('darwin') and env.ToolchainIs('clang')):
         env.Append(LINKFLAGS=["-pthread"])
+        env.Append( CXXFLAGS=os.environ['CXXFLAGS'] )
+        env.Append( LINKFLAGS=os.environ['LDFLAGS'] )
 
     # SERVER-9761: Ensure early detection of missing symbols in dependent
     # libraries at program startup. For non-release dynamic builds we disable
@@ -3657,6 +3658,7 @@
         # TODO: re-evaluate when we move to GCC 5.3
         # see: http://stackoverflow.com/questions/21755206/how-to-get-around-gcc-void-b-4-may-be-used-uninitialized-in-this-funct
         myenv.AddToCXXFLAGSIfSupported("-Wno-maybe-uninitialized")
+        myenv.AddToCXXFLAGSIfSupported("-Wno-redundant-move")
 
         # Disable warning about templates that can't be implicitly instantiated. It is an attempt to
         # make a link error into an easier-to-debug compiler failure, but it triggers false